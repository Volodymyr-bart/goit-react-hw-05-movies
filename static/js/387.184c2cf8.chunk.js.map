{"version":3,"file":"static/js/387.184c2cf8.chunk.js","mappings":"6SAEMA,EAAW,+BACJC,EAAU,mCAEVC,EAAiB,mCAAG,oGACRC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFb,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCADM,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfG,EAAY,mCAAG,WAAMC,GAAN,uFACHP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACcT,EADd,oBADG,cACpBG,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZM,EAAY,mCAAG,WAAMD,GAAN,uFACHP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,oBADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKO,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,2BADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,qD,oIC/BfQ,EAAcC,EAAAA,GAAAA,GAAH,8HAOXC,EAAaD,EAAAA,GAAAA,GAAH,2GASVE,EAAcF,EAAAA,GAAAA,GAAH,0DAMXG,EAAeH,EAAAA,GAAAA,EAAH,oC,SCczB,EA5BgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBH,GAASI,KAAKL,GAAYM,MAAM,QACrD,GAAE,CAACL,KAGF,8BACGF,EAAQQ,OAAS,GAChB,SAACd,EAAD,UACGM,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASrB,EAApB,EAAoBA,GAApB,OACX,SAACM,EAAD,WACE,4BACE,UAACC,EAAD,sBAAsBa,MACtB,SAACZ,EAAD,UAAea,QAHFrB,EADN,OAUf,qEAIP,C","sources":["API/ApiRequest.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = '8ce47aec5b56dd72034bc517ae24ed44';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n  margin-left: 20px;\n`;\nexport const ReviewsBox = styled.li`\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n  }\n`;\n\nexport const ReviewTitle = styled.h3`\nmargin: 0;\npadding-top: 15px;\n\n`\n\nexport const RevieContent = styled.p`\nmargin: 0;\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as Api from '../../API/ApiRequest';\nimport {\n  RevieContent,\n  ReviewsBox,\n  ReviewsList,\n  ReviewTitle,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    Api.getMovieReviews(movieId).then(setReviews).catch('error');\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ author, content, id }) => (\n            <ReviewsBox key={id}>\n              <div>\n                <ReviewTitle>Author: {author}</ReviewTitle>\n                <RevieContent>{content}</RevieContent>\n              </div>\n            </ReviewsBox>\n          ))}\n        </ReviewsList>\n      ) : (\n        <p>So sorry... But there is no reviews yet!</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","response","data","results","getMovieByQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","ReviewsList","styled","ReviewsBox","ReviewTitle","RevieContent","useState","reviews","setReviews","movieId","useParams","useEffect","Api","then","catch","length","map","author","content"],"sourceRoot":""}